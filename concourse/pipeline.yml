---
resource_types:
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource
      tag: latest

resources:
  - name: notify
    type: slack-notification
    icon: slack
    source:
      url: ((slack-webhook))

  - name: fauna-js-repository
    type: git
    icon: github
    source:
      uri: git@github.com:fauna/fauna-js.git
      branch: main
      private_key: ((github-ssh-key))

  - name: testtools-repo
    type: git
    icon: github
    source:
      uri: git@github.com:fauna/testtools.git
      branch: main
      private_key: ((github-ssh-key))

  - name: testtools-image
    type: registry-image
    icon: docker
    source:
      repository: devex-dx-drivers-platform-tests
      aws_access_key_id: ((prod-images-aws-access-key-id))
      aws_secret_access_key: ((prod-images-aws-secret-key))
      aws_region: us-east-2

groups:
  - name: standard-release
    jobs:
      - set-self
      - test 
      - release

jobs:
  - name: set-self
    serial: true
    plan:
      - get: fauna-js-repository
        trigger: true
      - set_pipeline: self
        file: fauna-js-repository/concourse/pipeline.yml

  - name: test
    serial: true
    plan:
      - get: fauna-js-repository
        trigger: true
        passed:
          - set-self

      - get: testtools-repo
      - get: testtools-image

      - load_var: git-commit
        reveal: true
        file: fauna-js-repository/.git/ref

      - in_parallel:
          fail_fast: false
          steps:
            - task: aws-lambda-tests
              image: testtools-image
              file: testtools-repo/fauna-driver-platform-tests/concourse/tasks/js-aws-lambda-tests.yml
              params:
                GIT_COMMIT: ((.:git-commit))
                FAUNA_SECRET: ((drivers-platform-tests/fauna-secret))
                AWS_LAMBDA_ROLE_ARN: ((drivers-platform-tests/aws-lambda-role-arn))
                AWS_ACCESS_KEY_ID: ((drivers-platform-tests/aws-access-key-id))
                AWS_SECRET_ACCESS_KEY: ((drivers-platform-tests/aws-secret-key))

            - task: cloudflare-tests
              image: testtools-image
              file: testtools-repo/fauna-driver-platform-tests/concourse/tasks/js-cloudflare-workers-tests.yml
              params:
                GIT_COMMIT: ((.:git-commit))
                CLOUDFLARE_API_TOKEN: ((drivers-platform-tests/cloudflare-api-token))
                FAUNA_SECRET: ((drivers-platform-tests/fauna-secret))
                VERCEL_TOKEN: ((drivers-platform-tests/vercel-token))

            - task: netlify-tests
              image: testtools-image
              file: testtools-repo/fauna-driver-platform-tests/concourse/tasks/js-netlify-tests.yml
              params:
                GIT_COMMIT: ((.:git-commit))
                FAUNA_SECRET: ((drivers-platform-tests/fauna-secret))
                NETLIFY_ACCOUNT: ((drivers-platform-tests/netlify-account))
                NETLIFY_AUTH_TOKEN: ((drivers-platform-tests/netlify-auth-token))

            # - task: vercel-tests
            #   image: testtools-image
            #   file: testtools-repo/fauna-driver-platform-tests/concourse/tasks/js-vercel-tests.yml
            #   params:
            #     GIT_COMMIT: ((.:git-commit))
            #     FAUNA_SECRET: ((drivers-platform-tests/fauna-secret))
            #     VERCEL_TOKEN: ((drivers-platform-tests/vercel-token))

  - name: release
    serial: true
    public: false
    plan:
      - get: fauna-js-repository
        passed:
          - test

      - task: integration-tests
        file: fauna-js-repository/concourse/tasks/integration-tests.yml
        privileged: true
        on_success:
          put: notify
          params:
            text: "fauna-js driver release passed integration tests"
        on_failure:
          put: notify
          params:
            text: fauna-js driver release failed integration tests

      - task: publish
        file: fauna-js-repository/concourse/tasks/npm-publish.yml
        params:
          NPM_TOKEN: ((npm_token))
        on_success:
          put: notify
          params:
            text_file: slack-message/publish
        on_failure:
          put: notify
          params:
            text_file: slack-message/publish
