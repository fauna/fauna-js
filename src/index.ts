export { Client, StreamClient, FeedClient } from "./client";
export {
  endpoints,
  type ClientConfiguration,
  type Endpoints,
  type StreamClientConfiguration,
  type FeedClientConfiguration,
} from "./client-configuration";
export {
  AbortError,
  AuthenticationError,
  AuthorizationError,
  ClientError,
  ClientClosedError,
  ConstraintFailureError,
  ContendedTransactionError,
  FaunaError,
  InvalidRequestError,
  NetworkError,
  ProtocolError,
  QueryCheckError,
  QueryRuntimeError,
  QueryTimeoutError,
  ServiceError,
  ServiceInternalError,
  ThrottlingError,
} from "./errors";
export {
  fql,
  type Query,
  type QueryArgument,
  type QueryArgumentObject,
} from "./query-builder";
export {
  DecodeOptions,
  LONG_MAX,
  LONG_MIN,
  TaggedTypeFormat,
} from "./tagged-type";
export {
  type ArrayFragment,
  type ConstraintFailure,
  type EncodedObject,
  type FeedError,
  type FeedRequest,
  type FeedSuccess,
  type FQLFragment,
  type ObjectFragment,
  type QueryFailure,
  type QueryInfo,
  type QueryInterpolation,
  type QueryOptions,
  type QueryRequest,
  type QueryStats,
  type QuerySuccess,
  type QueryValue,
  type QueryValueObject,
  type Span,
  type StreamEventData,
  type StreamEventError,
  type StreamEventStatus,
  type StreamRequest,
  type TaggedBytes,
  type TaggedDate,
  type TaggedDouble,
  type TaggedInt,
  type TaggedLong,
  type TaggedMod,
  type TaggedObject,
  type TaggedRef,
  type TaggedTime,
  type TaggedType,
  type ValueFormat,
  type ValueFragment,
} from "./wire-protocol";
export {
  DateStub,
  Document,
  DocumentReference,
  EmbeddedSet,
  FlattenedSetIterator,
  Module,
  NamedDocument,
  NamedDocumentReference,
  NullDocument,
  Page,
  SetIterator,
  StreamToken,
  TimeStub,
  FeedPage,
  type EventSource,
  type DocumentT,
} from "./values";
export {
  FaunaAPIPaths,
  FetchClient,
  getDefaultHTTPClient,
  HTTPClientOptions,
  HTTPStreamRequest,
  isHTTPResponse,
  isStreamClient,
  NodeHTTP2Client,
  SupportedFaunaAPIPaths,
  type HTTPClient,
  type HTTPRequest,
  type HTTPResponse,
  type HTTPStreamClient,
  type StreamAdapter,
} from "./http-client";
